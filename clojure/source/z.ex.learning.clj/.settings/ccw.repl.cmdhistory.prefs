cmdhistory=["(def x 5)" "(defn x-one [num] (+ num 5))" "(x-one x)" "(defun x-two [num] (+ num 10))" "(getf (list \:one 1 \:two 2 \:three 3) \:one)" "(def list-keys (list \:one 1 \:two 2 \:three 3))" "(getf list-keys \:one)" "(get list-keys \:one)" "(println Person)" "(println n1)" "(println paul-person)" "(-> paul-person \:employer \:address \:street)" "(n-add-five n1)" "(println a-length)" "(print a-count)" "(defn to-lower-case\\n  [token-str] \\n  (.toLowerCase token-str))" "(def pre-tokenized-list \\n  '(\\"Paul\\" \\"was\\" \\"here\\"))" "(def processed-list \\n  (to-lower-case pre-tokenized-list))" "(def processed-list \\n  (map to-lower-case pre-tokenized-list))" "(println processed-list)" "(def stop-words\\n  \#{\\"a\\" \\"in\\" \\"that\\" \\"for\\" \\"was\\" \\"is\\"\\n    \\"it\\" \\"the\\" \\"of\\" \\"and\\" \\"to\\" \\"he\\"})" "(contains? stop-words \\"and\\")" "(contains? stop-words \\"paul\\")" "(def my-integers\\n  '(-3 -2 -1 0 1 2 3))" "(def my-natural-numbers\\n  (filter pos? my-integers))" "(println my-natural-numbers)" "(def set-complement\\n  (complement (contains? stop-words \\"that\\")))" "(println set-complement)" "(set-complement)" "(println \\n  set-complement)" "(println (.valueOf set-complement))" "(defn set-complement-2\\n  (complement (contains? stop-words \\"that\\")))" "(defn set-complement-2\\n  [stop-words]\\n  (complement (contains? stop-words \\"that\\")))" "(set-complement-2 stop-words)" "(defn say-hi\\n  []\\n  (println \\"Hello, world\!\\")\\n  [name]\\n  (println (str \\"Hello, \\" name \\"\!\\")))" "(say-hi)" "(defn say-hi\\n  ([]\\n  (println \\"Hello, world\!\\"))\\n  ([name]\\n  (println (str \\"Hello, \\" name \\"\!\\"))))" "(say-hi)" "(say-hi \\"Paul\\")" "(defn say-hi\\n  ([]\\n  (say-hi \\"world\\"))\\n  ([name]\\n  (println (str \\"Hello, \\" name \\"\!\\"))))" "(say-hi)" "(say-hi \\"Paul\\")"]
eclipse.preferences.version=1
